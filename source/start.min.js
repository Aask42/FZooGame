var __reflect = this && this.__reflect || function (t, e, i) {
        t.__class__ = e, i ? i.push(e) : i = [e], t.__types__ = t.__types__ ? i.concat(t.__types__) : i
    },
    __extends = this && this.__extends || function () {
        var t = Object.setPrototypeOf || {
            __proto__: []
        }
        instanceof Array && function (t, e) {
            t.__proto__ = e
        } || function (t, e) {
            for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i])
        };
        return function (e, i) {
            function r() {
                this.constructor = e
            }
            t(e, i), e.prototype = null === i ? Object.create(i) : (r.prototype = i.prototype, new r)
        }
    }(),
    WeatherBase = function () {
        function t(t) {
            this._runing = !1, this._first = !1, this.timerFrame = 15e3, this.index = 0, this.imageList = [], this.m_Temp = 0, this.index = t
        }
        return t.prototype.playWeather = function (t) {
            this.imageList = t || [], 0 == this._runing && (this._runing = !0, this._first = !0, this.onWeatherStart(), this.timerFrame > 0 || (this.timerFrame = 60), egret.startTick(this.weatherUpdateHandler, this), WeatherFactory.weatherRunlist[this.index] = this)
        }, t.prototype.stopWeather = function () {
            1 == this._runing && (this._runing = !1, egret.stopTick(this.weatherUpdateHandler, this), this.onWeatherStop(), delete WeatherFactory.weatherRunlist[this.index])
        }, t.prototype.weatherUpdateHandler = function (t) {
            return t > this.m_Temp + this.timerFrame ? (this.m_Temp = t, 1 == this._first ? this._first = !1 : this.onWeatherUpdate(), !1) : !1
        }, t.prototype.onWeatherInit = function () {}, t.prototype.onWeatherStart = function () {}, t.prototype.onWeatherUpdate = function () {}, t.prototype.onWeatherStop = function () {}, t
    }();
__reflect(WeatherBase.prototype, "WeatherBase");
var NoticeUI = function (t) {
    function e() {
        var e = t.call(this) || this;
        return e.addEventListener(egret.Event.ADDED_TO_STAGE, e.onAddToStage, e), e
    }
    return __extends(e, t), e.prototype.onAddToStage = function (t) {
        this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this)
    }, e.prototype.UpdateNotice = function (t) {
        var e = JSON.parse(t.currentTarget.response);
        e[0] && 1 == e[0].result && null != e[0].data && (this.m_Label.text = e[0].data)
    }, e.prototype._OnClickClose = function () {
        this.Close()
    }, e.prototype.Close = function () {
        this.parent && this.parent.removeChild(this)
    }, e.prototype.onResize = function () {
        this.bg && (this.bg.x = -4 - (egret.MainContext.instance.stage.stageWidth >> 1), this.bg.y = -Main.Instance.mUIGroupYPos, this.bg.width = 1.2 * egret.MainContext.instance.stage.stageWidth, this.bg.height = 1.2 * egret.MainContext.instance.stage.stageHeight)
    }, e
}(egret.DisplayObjectContainer);
__reflect(NoticeUI.prototype, "NoticeUI");
var GameServerData = function () {
    function t() {}
    return t.HasRecentSvr = function () {
        return t.PageData && t.PageData[0] && t.PageData[0].datas && t.PageData[0].datas.length ? !0 : !1
    }, t.Init = function (e, i, r) {
        this.MaxId = e;
        var n = new GameServerPageData;
        n.name = "    ", n.index = 0, n.datas = i, t.PageData.push(n);
        for (var a = Math.max(Math.ceil(e / t.PAGE_COUNT), 1), o = a; o >= 1; --o) {
            var s = new GameServerPageData;
            s.name = (o - 1) * t.PAGE_COUNT + 1 + " - " + o * t.PAGE_COUNT + " ", s.index = o, s.datas = [], t.PageData.push(s)
        }
        t.PageData[1].datas = r, null != i && i.length > 0 && (t.SelectData = i[0]), null == t.SelectData && null != r && r.length > 0 && (t.SelectData = r[0])
    }, t.GetPageData = function (t) {
        HttpHelper.GetServerList(t, this._DoPageData, this)
    }, t._DoPageData = function (e, i) {
        var r = JSON.parse(i.currentTarget.response),
            n = r.data;
        console.info("----_DoPageData----" + r);
        var a = [];
        for (var o in n) {
            var s = n[o],
                h = GameServerDescData.Get(s);
            h && a.push(h)
        }
        a.sort(function (t, e) {
            return e.id - t.id
        });
        for (var _ = 0, d = t.PageData; _ < d.length; _++) {
            var l = d[_];
            if (l.index == e) {
                l.datas = a;
                break
            }
        }
        t.Callback && t.ThisObject && t.Callback.call(t.ThisObject, e)
    }, t.PAGE_COUNT = 20, t.PageData = [], t.SelectData = null, t.Callback = null, t.ThisObject = null, t
}();
__reflect(GameServerData.prototype, "GameServerData");
var GameServerPageData = function () {
    function t() {}
    return t
}();
__reflect(GameServerPageData.prototype, "GameServerPageData");
var GameServerDescData = function () {
    function t() {}
    return t.prototype.GetStatus = function () {
        return 1 == this.status || 3 == this.status ? 1 : 2 == this.status || 4 == this.status ? 2 : 0
    }, t.prototype.CanEnter = function () {
        return this.version ? Main.Instance.GmLevel ? !0 : 1 == this.status || 2 == this.status : !1
    }, t.Get = function (e, i) {
        if (void 0 === i && (i = !1), !i && 0 == e.status && !Main.Instance.GmLevel) return null;
        var r = new t;
        return console.info("   obj " + e), console.error("obj.sid " + e.sid), r.id = e.sid, r.name = WindowData._GetServerName(e.sid), r.ip = e.addr, r.status = e.status, r.version = e.version, r
    }, t
}();
__reflect(GameServerDescData.prototype, "GameServerDescData");
var HttpHelper = function () {
    function t() {}
    return t.GetPlayerServerInfo = function (t, e, i) {
        var r = new egret.HttpRequest;
        r.responseType = egret.HttpResponseType.TEXT;
        var n = WindowData._GetServerAddr() + "/get_player_serverinfo?token=" + t + "&platformid=" + WindowData._GetPlatformId();
        console.error("GetPlayerServerInfo " + n), r.open(n, egret.HttpMethod.GET), r.send(), r.addEventListener(egret.Event.COMPLETE, e, i), r.addEventListener(egret.IOErrorEvent.IO_ERROR, this.Error, this)
    }, t.GetServerList = function (t, e, i) {
        var r = new egret.HttpRequest;
        r.responseType = egret.HttpResponseType.TEXT, r.open(WindowData._GetServerAddr() + "/get_serverlist?platformid=" + WindowData._GetPlatformId() + "&page=" + t, egret.HttpMethod.GET), r.send(), r.addEventListener(egret.Event.COMPLETE, function (r) {
            e.call(i, t, r)
        }, i), r.addEventListener(egret.IOErrorEvent.IO_ERROR, this.Error, this)
    }, t.GetRandomName = function (t, e, i, r) {
        var n = new egret.HttpRequest;
        n.responseType = egret.HttpResponseType.TEXT, n.open(WindowData._GetServerAddr() + "/get_random_name?platformid=" + WindowData._GetPlatformId() + "&serverid=" + t + "&sex=" + e, egret.HttpMethod.GET), n.send(), n.addEventListener(egret.Event.COMPLETE, i, r), n.addEventListener(egret.IOErrorEvent.IO_ERROR, this.Error, this)
    }, t.CheckName = function (t, e, i, r) {
        var n = new egret.HttpRequest;
        n.responseType = egret.HttpResponseType.TEXT, n.open(WindowData._GetServerAddr() + "/check_lock_name?platformid=" + WindowData._GetPlatformId() + "&serverid=" + t + "&name=" + e, egret.HttpMethod.GET), n.send(), n.addEventListener(egret.Event.COMPLETE, i, r), n.addEventListener(egret.IOErrorEvent.IO_ERROR, this.Error, this)
    }, t.GetNotice = function (t, e) {
        var i = new egret.HttpRequest;
        i.responseType = egret.HttpResponseType.TEXT;
        var r = WindowData._GetServerAddr() + "/api/game/announce?platformid=" + WindowData._GetPlatformId();
        i.open(r, egret.HttpMethod.GET), i.send(), i.addEventListener(egret.Event.COMPLETE, t, e), i.addEventListener(egret.IOErrorEvent.IO_ERROR, this.Error, this)
    }, t.SendPoint = function (e) {
        if (!t.m_Set[e] && Main.Instance) {
            t.m_Set[e] = !0;
            var i = new egret.HttpRequest;
            i.responseType = egret.HttpResponseType.TEXT, i.open(WindowData._GetServerAddr() + "/set_account_point?account=" + Main.Instance.UserName + "&status=" + e, egret.HttpMethod.GET), i.send()
        }
    }, t.Error = function () {
        alert("Request error,please try again later")
    }, t.m_Set = {}, t
}();
__reflect(HttpHelper.prototype, "HttpHelper");
var LoadingUI = function (t) {
    function e() {
        var e = t.call(this) || this;
        return e.m_Textures = [{
            path: "resource/assets/game_start/res/ui_bm_vip5.png",
            data: null
        }], e.tipx1 = -300, e.tipx2 = 35, e.imgWidth = 486, e.str = "", e.s1 = 0, e.e1 = 0, e.s2 = 0, e.e2 = 0, e.t = 0, e.et = 0, e.pt = 0, e.preveTime = 0, e.mt = 0, e.addEventListener(egret.Event.ADDED_TO_STAGE, e.onAddToStage, e), e
    }
    return __extends(e, t), e.prototype.NewBar = function (t) {}, e.prototype.onAddToStage = function (t) {
        this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this);
        var e = this.bg = new egret.Bitmap;
        e.texture = Main.Instance.GetSingleImg("_ui_loding_show"), e.touchEnabled = !0, e.x = -480, this.addChild(e), this.onResize();
        var i = new egret.TextField;
        i.touchEnabled = !0, i.addEventListener(egret.TouchEvent.TOUCH_TAP, this._OnClick, this), i.text = "If the loading fails for a long time, click refresh", i.strokeColor = 723971, i.textColor = 2480417, i.stroke = 1, i.size = 24, i.x = -302, i.y = 1126, i.width = 604, i.verticalAlign = egret.VerticalAlign.MIDDLE, i.textAlign = egret.HorizontalAlign.CENTER, this.addChild(i);
        var r = this.label03 = new egret.TextField;
        r.text = "", r.strokeColor = 723971, r.stroke = 1, r.size = 24, r.x = -302, r.y = 1156, r.width = 604, r.verticalAlign = egret.VerticalAlign.MIDDLE, r.textAlign = egret.HorizontalAlign.CENTER, this.addChild(r), this.preveTime = this.pt = egret.getTimer(), this.mt = egret.getTimer(), egret.startTick(this.Update, this), WindowData.StartLoading()
    }, e.prototype.SetBarValue = function (t, e, i) {
        e > 1 ? e = 0 : 0 > e && (e = 0);
        var r = t.width,
            n = Math.round(e * r);
        (0 > n || n === 1 / 0) && (n = 0);
        var a = t.$scrollRect;
        return a || (a = egret.$TempRectangle), a.setTo(0, 0, t.width, t.height), a.width = n, t.scrollRect = a, i.x = t.x + n - 55, e
    }, e.prototype._LoadTexture = function (t) {
        RES.getResByUrl(this.m_Textures[t].path, this._Loaded, this, RES.ResourceItem.TYPE_IMAGE)
    }, e.prototype._Loaded = function (t, e) {}, e.prototype.Close = function () {
        if (egret.stopTick(this.Update, this), this.parent) {
            this.parent.removeChild(this);
            for (var t = 0, e = this.m_Textures; t < e.length; t++) {
                var i = e[t];
                RES.destroyRes(i.path)
            }
        }
    }, e.prototype.Update = function (t) {
        var e = t - this.pt;
        this.pt = t, this.t += e;
        var i;
        return i = this.t > this.et ? 1 : this.t / this.et, this._UpdatePro(i), !1
    }, e.prototype._OnClick = function () {
        window.location.reload()
    }, e.prototype._UpdatePro = function (t) {
        this.str ? this.label03.text = this.str + " [" + Math.floor(100 * t) + "%]" : this.label03.text = ""
    }, e.prototype.UpdateText = function (t, e, i, r) {
        this.str = t, this._UpdatePro(i), this.t = 0, this.et = r
    }, e.prototype.SetText = function (t, e, i, r) {
        this.UpdateText(t, e, i, r)
    }, e.prototype.onResize = function () {
        this.blackBg && (this.blackBg.x = -4 - (egret.MainContext.instance.stage.stageWidth >> 1), this.blackBg.y = -Main.Instance.mUIGroupYPos, this.blackBg.width = 1.2 * egret.MainContext.instance.stage.stageWidth, this.blackBg.height = 1.2 * egret.MainContext.instance.stage.stageHeight), this.bg && (this.bg.y = -Main.Instance.mUIGroupYPos, this.bg.height = egret.MainContext.instance.stage.stageHeight, this.bg.width = this.bg.height / 1280 * 720, this.bg.x = -this.bg.width >> 1)
    }, e.prototype.getElasticOut = function (t) {
        if (0 == t || 1 == t) return t;
        var e = .075;
        return Math.pow(2, -10 * t) * Math.sin(6.28 * (t - e) / .3) + 1
    }, e.prototype.sineOut = function (t) {
        return Math.sin(t * Math.PI / 2)
    }, e
}(egret.DisplayObjectContainer);
__reflect(LoadingUI.prototype, "LoadingUI");
var LoginUI = function (t) {
    function e() {
        var e = t.call(this) || this;
        return e.addEventListener(egret.Event.ADDED_TO_STAGE, e.onAddToStage, e), e
    }
    return __extends(e, t), e.prototype.NewServerBg = function () {}, e.prototype.NewSelServerBg = function () {}, e.prototype.NewStarBtn = function () {}, e.prototype.onAddToStage = function (t) {
        this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this)
    }, e.prototype.Close = function () {
        this.parent && this.parent.removeChild(this)
    }, e.prototype.SetCurServerName = function () {
        GameServerData.SelectData ? (this.m_NewServerLabel.text = WindowData._GetServerName(GameServerData.MaxId), this.m_Label.text = GameServerData.SelectData.name) : (this.m_Label.text = "", this.m_NewServerLabel.text = "")
    }, e.prototype._OnClickNotice = function () {
        Main.Instance.ShowNoticeUI()
    }, e.prototype._OnClickServer = function () {
        Main.Instance.ShowServerUI()
    }, e.prototype._OnClickLogin = function () {
        Main.Instance.StartLoadGame(GameServerData.SelectData)
    }, e
}(egret.DisplayObjectContainer);
__reflect(LoginUI.prototype, "LoginUI");
var Main = function (t) {
    function e() {
        var i = t.call(this) || this;
        if (i.mLoadResGroup01 = {}, i.mLoadResGroup02 = {
                _ui_cjjs_bm_ditu: "resource/assets/game_start/_ui_cjjs_bm_ditu.jpg"
            }, i.mLoadResGroup03 = {
                _notice_res: "resource/assets/game_start/_notice_res.json?v=" + Math.random()
            }, i.mLoadResGroup04 = {
                _notice_res: "resource/assets/game_start/_notice_res.json?v=" + Math.random()
            }, i.mLoadResGroup05 = {
                _ui_loding_show: "resource/assets/game_start/_ui_loding_show.jpg"
            }, i.mLoadResGroup06 = {
                load_Reel: "resource/assets/game_start/_start_load_Reel.png"
            }, i.m_CurLoadGroup = [], i.m_NextStepType = -1, i.m_TimeOutId = null, i.mUIGroupYPos = 0, i.m_HasLoading = !0, i.m_ConCallback = null, i.m_CreateRolViewData = [CreateRoleUI, "CreateRoleUI"], e.Instance = i, WindowData._GetStartResAddr()) {
            var r = WindowData._GetStartResAddr();
            RES.web.Html5VersionController.prototype.getVirtualUrl = function (t) {
                return -1 != t.indexOf("http") ? t : r + t
            }
        }
        return i.addEventListener(egret.Event.ADDED_TO_STAGE, i.onAddToStage, i), i
    }
    return __extends(e, t), e.$GetThmPath = function (t, e) {
        if (e) {
            var i = t.split("game_start");
            return i[0] + "game_start/thm" + e + i[1]
        }
        return t
    }, e.prototype.onAddToStage = function (t) {
        var e = this;
        console.log("-------------------Main.ts- onAddToStage-------------------"), egret.TextField.default_fontFamily = "SimHei,SimSun,Arial", egret.DisplayObject.defaultTouchEnabled = !1, egret.ImageLoader.crossOrigin = "anonymous", egret.MainContext.instance.stage.addEventListener(egret.Event.RESIZE, this.onResize, this), this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this), this.m_UIGroup = new egret.DisplayObjectContainer, WindowData._GetBGImg() && (this.m_BGImg = new egret.Bitmap, this.m_UIGroup.addChild(this.m_BGImg), this._LoadGroup((i = {}, i.__BG_IMG__ = WindowData._GetBGImg(), i))), this.m_UIGroup.width = 0, this.m_UIGroup.height = 0, this.addChild(this.m_UIGroup), this.onResize(), WindowData._DirectLogin() ? window._LoginToken(function (t, i) {
            e.mToken = t, e._DoParsePlayerServerInfo(i)
        }) : window._LoginToken(function (t) {
            e.mToken = t, HttpHelper.GetPlayerServerInfo(t, e._DoGetPlayerServerInfo, e)
        });
        var i
    }, e.prototype._DoGetPlayerServerInfo = function (t) {
        var e = t.currentTarget;
        return this._DoParsePlayerServerInfo(e.response)
    }, e.prototype._DoParsePlayerServerInfo = function (t) {
        var i = JSON.parse(t);
        if (console.info(i), 1 == i.result) {
            var r = function (t) {
                    if (!t) return [];
                    for (var e in t) return t;
                    return []
                },
                n = i.data.player;
            this.UserName = n.username, this.GmLevel = n.gm_level, this.lid = n.lid, this.playerServerData = i, this.NoticeStatus = i.data.ns, this.DayFirstLogin = n.firstLogin;
            var a = r(i.data.recent);
            a.sort(function (t, e) {
                return e.time - t.time
            });
            for (var o = [], s = 0, h = a; s < h.length; s++) {
                var _ = h[s],
                    d = GameServerDescData.Get(_, !0);
                d && o.push(d)
            }
            var l = [],
                c = r(i.data.lpage);
            c.sort(function (t, e) {
                return e.sid - t.sid
            });
            for (var u = 0, p = c; u < p.length; u++) {
                var _ = p[u],
                    d = GameServerDescData.Get(_);
                d && l.push(d)
            }
            if (GameServerData.Init(i.data.maxid, o, l), 0 == GameServerData.PageData[0].datas.length) {
                for (var g = GameServerData.PageData[1].datas, m = 0; m < g.length; ++m) {
                    var _ = g[m];
                    if (_.CanEnter()) return HttpHelper.SendPoint(4), this.m_CreateRoleData = _, this._LoadGroup(this.mLoadResGroup02), void this._SetNextStep(2)
                }
                console.log("            ")
            }
            this._LoadGroup(this.mLoadResGroup01), this._SetNextStep(1), e.Instance.StartLoadGame(GameServerData.SelectData)
        }
    }, e.prototype._SetNextStep = function (t) {
        this.DoShowLoadingImg(), this.m_NextStepType = t, this._CreateScene()
    }, e.prototype._LoadSheet = function (t) {
        this.m_CurLoadGroup.push(t), RES.getResByUrl(t, this._OnLoadItem, this, RES.ResourceItem.TYPE_SHEET)
    }, e.prototype._LoadGroup = function (t) {
        for (var e in t) this.m_CurLoadGroup.push(t[e]);
        for (var e in t) {
            var i = t[e]; - 1 != i.indexOf(".json") ? RES.getResByUrl(i, this._OnLoadItem, this, RES.ResourceItem.TYPE_SHEET) : RES.getResByUrl(i, this._OnLoadItem, this, RES.ResourceItem.TYPE_IMAGE)
        }
    }, e.prototype._CheckUI = function (t) {
        if (this.m_CurLoadGroup.length > 0 || -1 != this.m_NextStepType) return !1;
        for (var e = 0, i = this.$children; e < i.length; e++) {
            var r = i[e];
            if (egret.is(r, t)) return !1
        }
        return !0
    }, e.prototype.ShowServerUI = function () {
        this._CheckUI("ServerUI") && (this._LoadGroup(this.mLoadResGroup03), this._SetNextStep(3))
    }, e.prototype.ShowNoticeUI = function () {
        this._CheckUI("NoticeUI") && (this._LoadGroup(this.mLoadResGroup04), this._SetNextStep(4))
    }, e.prototype.ShowCreateUI = function (t) {
        this._CheckServerState(t) && this._CheckUI(this.m_CreateRolViewData[1]) && (this.m_CreateRoleData = t, this._LoadGroup(this.mLoadResGroup02), this._SetNextStep(2))
    }, e.prototype.UpdateLoadingUI = function (t, e, i, r, n) {
        for (var a = this.m_UIGroup.numChildren - 1; a >= 0; --a) {
            var o = this.m_UIGroup.getChildAt(a);
            if (egret.is(o, "LoadingUI")) {
                t ? o.UpdateText(e, i, r, n) : o.SetText(e, i, r, n);
                break
            }
        }
    }, e.prototype.ShowLoadingUI = function () {
        this._CheckUI("LoadingUI") && (this._LoadGroup(this.mLoadResGroup05), this._SetNextStep(5))
    }, e.prototype.DoShowLoadingImg = function () {
        this.m_TimeOutId && (egret.clearTimeout(this.m_TimeOutId), this.m_TimeOutId = null), this.m_TimeOutId = egret.setTimeout(this.ShowLoadingImg, this, 1e3)
    }, e.prototype.ShowLoadingImg = function () {
        null == this.m_LoadingImg && (this.m_LoadingImg = new egret.Bitmap, this.m_LoadingImg.texture = RES.getAnalyzer(RES.ResourceItem.TYPE_IMAGE).getRes("resource/assets/game_start/_start_load_Reel.png"), this.m_LoadingImg.anchorOffsetX = this.m_LoadingImg.width >> 1, this.m_LoadingImg.anchorOffsetY = this.m_LoadingImg.height >> 1, this.onResize()), this.m_LoadingImg.parent && this.m_LoadingImg.parent.removeChild(this.m_LoadingImg), egret.stopTick(this.UpdateLoadingImgAnim, this), egret.startTick(this.UpdateLoadingImgAnim, this), this.m_UIGroup.addChild(this.m_LoadingImg)
    }, e.prototype.UpdateLoadingImgAnim = function (t) {
        return this.m_LoadingImg && (this.m_LoadingImg.rotation = Math.floor(.5 * t) % 360), !1
    }, e.prototype.HideLoadingImg = function () {
        egret.stopTick(this.UpdateLoadingImgAnim, this), this.m_TimeOutId && (egret.clearTimeout(this.m_TimeOutId), this.m_TimeOutId = null), this.m_LoadingImg && this.m_LoadingImg.parent && this.m_LoadingImg.parent.removeChild(this.m_LoadingImg)
    }, e.prototype.onResize = function () {
        this.m_LoadingImg && (this.m_LoadingImg.y = egret.MainContext.instance.stage.stageHeight >> 1), this.m_UIGroup.x = egret.MainContext.instance.stage.stageWidth >> 1, this.m_UIGroup.y = egret.MainContext.instance.stage.stageHeight - 1280 >> 1, this.mUIGroupYPos = this.m_UIGroup.y;
        for (var t = this.m_UIGroup.numChildren - 1; t >= 0; --t) {
            var e = this.m_UIGroup.getChildAt(t);
            e.onResize && e.onResize()
        }
    }, e.prototype._CloseView = function (t) {
        try {
            t.Close ? t.Close() : console.log("not close func " + t)
        } catch (e) {
            console.log(e)
        }
    }, e.prototype.ShowGame = function () {
        if (this.m_HasLoading) {
            this.m_HasLoading = null, this.HideLoadingImg(), this.m_LoadingImg = null;
            for (var t = this.m_UIGroup.numChildren - 1; t >= 0; --t) {
                var e = this.m_UIGroup.getChildAt(t);
                egret.is(e, "LoadingUI"), this._CloseView(e)
            }
            for (var i in this.mLoadResGroup01) RES.destroyRes(this.mLoadResGroup01[i]);
            for (var i in this.mLoadResGroup02) RES.destroyRes(this.mLoadResGroup02[i]);
            for (var i in this.mLoadResGroup03) RES.destroyRes(this.mLoadResGroup03[i]);
            for (var i in this.mLoadResGroup04) RES.destroyRes(this.mLoadResGroup04[i]);
            for (var i in this.mLoadResGroup05) RES.destroyRes(this.mLoadResGroup05[i]);
            WindowData._GetBGImg() && RES.destroyRes(WindowData._GetBGImg()) && console.log("destroy res => " + WindowData._GetBGImg())
        }
    }, e.prototype._CheckServerState = function (t) {
        return t ? t.version ? (0 == t.status || t.status > 2) && !this.GmLevel ? (alert("Server is under maintenance,please try again later!!"), !1) : !0 : (alert("The server is under maintenance,please try again later!!"), !1) : (alert("Server data is empty,please log in again!!"), !1)
    }, e.prototype.ConnectServer = function (t, e) {
        if (this._CheckServerState(t)) {
            console.info(JSON.stringify(t.toString()));
            var i = Socket.ins().GetSocketState();
            if (i != Socket.STATUS_CONNECTING) {
                if (i == Socket.STATUS_CHECKING) return void(e && e());
                this.DoShowLoadingImg(), this.mConnectServerData = t;
                var r = t.ip.split(":"),
                    n = r[0],
                    a = r[1];
                this.m_ConCallback = e, Socket.ins().UpdateStateEvent = this.SocketUpdateState.bind(this), Socket.ins().connect(n, Number(a))
            }
        }
    }, e.prototype.StartLoadGame = function (t) {
        var e = this;
        this.ConnectServer(t, function () {
            e.ShowLoadingUI()
        })
    }, e.prototype._ClearConData = function () {
        this.HideLoadingImg(), Socket.ins().UpdateStateEvent = null, this.m_ConCallback = null
    }, e.prototype.SocketUpdateState = function (t) {
        if (t == Socket.STATUS_CHECKING) {
            var e = this.m_ConCallback;
            this._ClearConData(), e ? e() : console.log("not callback func !!!")
        } else t == Socket.STATUS_DISCONNECT && this._ClearConData()
    }, e.prototype.GetImg = function (t) {
        return RES.getAnalyzer(RES.ResourceItem.TYPE_SHEET).getRes(t)
    }, e.prototype.GetSingleImg = function (t) {
        var e = this.mLoadResGroup02[t];
        return e || (e = this.mLoadResGroup05[t]), e || console.error("not name " + t), RES.getAnalyzer(RES.ResourceItem.TYPE_IMAGE).getRes(e)
    }, e.prototype._OnLoadItem = function (t, e) {
        for (var i = 0, r = this.m_CurLoadGroup.length; r > i; ++i)
            if (this.m_CurLoadGroup[i] == e) {
                this.m_CurLoadGroup.splice(i, 1);
                break
            } console.log("loaded => " + e), this.m_BGImg && e == WindowData._GetBGImg() && t && (this.m_BGImg.texture = t, this.m_BGImg.x = -(t.textureWidth >> 1)), this.m_CurLoadGroup.length > 0 || this._CreateScene()
    }, e.prototype._CreateScene = function () {
        if (!(this.m_CurLoadGroup.length > 0)) {
            if (1 == WindowData._GetStartType()) {
                if (window.__RemoveLoading && window.__RemoveLoading(), this.m_NextStepType < 1) return
            } else {
                if (this.m_NextStepType < 1) return;
                window.__RemoveLoading && window.__RemoveLoading()
            }
            var t = this.m_NextStepType;
            this.m_NextStepType = -1, this.CreateGameScene(t)
        }
    }, e.prototype.CreateGameScene = function (t) {
        if (1 == t) this.m_UIGroup.addChild(new LoginUI);
        else if (2 == t)
            if (null == this.m_CreateRoleData) console.error("not server data create");
            else {
                var e = this.m_CreateRoleData;
                this.m_CreateRoleData = null;
                var i = this.m_CreateRolViewData[0];
                this.m_UIGroup.addChild(new i(e)), WindowData.RemoveBg();
                for (var r = this.m_UIGroup.numChildren - 1; r >= 0; --r) {
                    var n = this.m_UIGroup.getChildAt(r);
                    egret.is(n, this.m_CreateRolViewData[1]) || this._CloseView(n)
                }
            }
        else if (3 == t) this.m_UIGroup.addChild(new ServerUI);
        else if (4 == t) this.m_UIGroup.addChild(new NoticeUI);
        else if (5 == t) {
            this.m_UIGroup.addChild(new LoadingUI), WindowData.RemoveBg();
            for (var r = this.m_UIGroup.numChildren - 1; r >= 0; --r) {
                var n = this.m_UIGroup.getChildAt(r);
                egret.is(n, "LoadingUI") || this._CloseView(n)
            }
        }
        this.HideLoadingImg()
    }, e.closesocket = function () {
        var t = Socket._ins;
        t && t.close()
    }, e
}(egret.DisplayObjectContainer);
__reflect(Main.prototype, "Main");
var TestScreenAdapter = function (t) {
    function e() {
        return null !== t && t.apply(this, arguments) || this
    }
    return __extends(e, t), e.prototype.calculateStageSize = function (t, e, i, r, n) {
        r = 720, n = 1280;
        var a = e,
            o = i,
            s = r,
            h = n,
            _ = e / s || 0,
            d = i / h || 0,
            l = 1280,
            c = 720,
            u = e / i,
            p = .75;
        return u > p ? (r = Math.round(l * p), s = r, a = Math.round(r * d)) : .5 > u ? (n = Math.round(18 * c / 9), h = n, o = Math.round(n * _)) : 9 / 16 > u ? (n = Math.round(c / u), h = n, o = Math.round(n * _)) : s = Math.round(e / d), a % 2 != 0 && (a += 1), o % 2 != 0 && (o += 1), {
            stageWidth: s,
            stageHeight: h,
            displayWidth: a,
            displayHeight: o
        }
    }, e
}(egret.HashObject);
__reflect(TestScreenAdapter.prototype, "TestScreenAdapter", ["egret.sys.IScreenAdapter"]), egret.sys.screenAdapter = new TestScreenAdapter;
var CreateRoleUI = function (t) {
    function e(e) {
        var i = t.call(this) || this;
        return i.m_Textures = [{
            path: "resource/assets/game_start/create/ui_cjjs_bm_juese.png",
            data: null
        }, {
            path: "resource/assets/game_start/create/ui_cjjs_bm_nvjuese.png",
            data: null
        }, {
            path: "resource/assets/game_start/create/ui_cjjs_xianzhu_nan.png",
            data: null
        }, {
            path: "resource/assets/game_start/create/ui_cjjs_xianzhu_nv.png",
            data: null
        }, {
            path: "resource/assets/game_start/create/ui_cjjs_mozhu_nan.png",
            data: null
        }, {
            path: "resource/assets/game_start/create/ui_cjjs_mozhu_nv.png",
            data: null
        }], i.m_IsRandom = !0, i.m_TweenList = [], i.m_CurImgIndex = 1, i.m_Index = -1, i.m_Job = 1, i.m_Sex = 0, i.mSelImg = [], i.time = 6e4, i.m_CheckName = null, i.m_CheckIndex = null, i.m_LastTime = 0, i.m_ServerData = e, i.addEventListener(egret.Event.ADDED_TO_STAGE, i.onAddToStage, i), i
    }
    return __extends(e, t), e.prototype.m_CreateThm1 = function () {
        var t = this,
            i = new egret.Bitmap;
        i.texture = Main.Instance.GetImg("_ui_bm_mingzibg@20_19_19_19"), i.y = 1021, i.x = -146, i.width = 292, i.height = 74, i.scale9Grid = new egret.Rectangle(20, 19, 3, 3), this.addChild(i), this.roleGroup0 = new egret.DisplayObjectContainer, this.roleGroup0.y = 808, this.roleGroup0.x = 0, this.roleGroup0.width = 0, this.roleGroup0.height = 0, this.addChild(this.roleGroup0), this.roleImg0 = new egret.Bitmap, this.roleGroup0.addChild(this.roleImg0), this.roleGroup1 = new egret.DisplayObjectContainer, this.roleGroup1.y = 808, this.roleGroup1.x = 0, this.roleGroup1.width = 0, this.roleGroup1.height = 0, this.addChild(this.roleGroup1), this.roleImg1 = new egret.Bitmap, this.roleGroup1.addChild(this.roleImg1);
        var r = new egret.Bitmap;
        r.texture = Main.Instance.GetImg("_ui_cjjs_bm_wenbenbg"), r.y = 812, r.x = -192, this.addChild(r);
        var n = new egret.TextField;
        n.touchEnabled = !1, n.size = 26, n.textColor = 5907985, n.text = "     ", n.bold = !0, n.width = 229, n.x = -114, n.y = 830, n.textAlign = egret.HorizontalAlign.CENTER, n.verticalAlign = egret.VerticalAlign.MIDDLE, this.addChild(n);
        var a = new egret.TextField;
        a.touchEnabled = !1, a.size = 26, a.textColor = 15873847, this.timeLabel = a, a.text = "60s        ", a.bold = !0, a.width = 342, a.x = -171, a.y = 1224, a.textAlign = egret.HorizontalAlign.CENTER, a.verticalAlign = egret.VerticalAlign.MIDDLE, this.addChild(a);
        var o = new egret.Bitmap;
        o.touchEnabled = !0, o.texture = Main.Instance.GetImg("_ui_bt_nan"), this.sex1 = o, o.x = 174, o.y = 1015, this.addChild(o), o.addEventListener(egret.TouchEvent.TOUCH_TAP, function () {
            t.m_Sex = 0, t.UpdateSel()
        }, this), e.SetDownState(o);
        var s = new egret.Bitmap;
        s.touchEnabled = !0, this.sex2 = s, s.texture = Main.Instance.GetImg("_ui_bt_nv"), s.x = 269, s.y = 1015, this.addChild(s), s.addEventListener(egret.TouchEvent.TOUCH_TAP, function () {
            t.m_Sex = 1, t.UpdateSel()
        }, this), e.SetDownState(s);
        var h = new egret.Bitmap;
        this.sel1 = h, h.texture = Main.Instance.GetImg("_ui_cjjs_bm_gou"), h.touchEnabled = !1, h.x = 207, h.y = 1058, this.addChild(h);
        var _ = new egret.Bitmap;
        this.sel2 = _, _.texture = Main.Instance.GetImg("_ui_cjjs_bm_gou"), h.touchEnabled = !1, _.x = 304, _.y = 1058, this.addChild(_)
    }, e.prototype.AddSelGroup = function () {
        var t = this,
            i = new egret.DisplayObjectContainer;
        i.x = 0, i.y = 872, i.width = 0, this.addChild(i);
        var r = new egret.Bitmap;
        r.touchEnabled = !0, r.texture = Main.Instance.GetImg("_ui_icon_renzhu"), r.x = -202, r.y = -4, r.addEventListener(egret.TouchEvent.TOUCH_TAP, function () {
            t.Select(0)
        }, this), i.addChild(r), e.SetDownState(r);
        var n = new egret.Bitmap;
        n.touchEnabled = !0, n.texture = Main.Instance.GetImg("_ui_icon_xianzhu"), n.x = -63, n.y = -4, n.addEventListener(egret.TouchEvent.TOUCH_TAP, function () {
            t.Select(1)
        }, this), i.addChild(n), e.SetDownState(n);
        var a = new egret.Bitmap;
        a.touchEnabled = !0, a.texture = Main.Instance.GetImg("_ui_icon_mozhu"), a.x = 77, a.y = -4, a.addEventListener(egret.TouchEvent.TOUCH_TAP, function () {
            t.Select(2)
        }, this), i.addChild(a), e.SetDownState(a);
        var o = new egret.Bitmap;
        o.texture = Main.Instance.GetImg("_ui_cjjs_bm_renzu"), o.x = -169, o.y = 982, this.addChild(o);
        var s = new egret.Bitmap;
        s.texture = Main.Instance.GetImg("_ui_cjjs_bm_xianzu"), s.x = -28, s.y = 982, this.addChild(s);
        var h = new egret.Bitmap;
        h.texture = Main.Instance.GetImg("_ui_cjjs_bm_mozu"), h.x = 109, h.y = 982, this.addChild(h);
        var _ = new egret.DisplayObjectContainer;
        _.x = 0, _.y = 882, _.width = 0, this.addChild(_);
        var d = new egret.Bitmap;
        d.texture = Main.Instance.GetImg("_ui_cjjs_bm_xuanzhongxiaoguo"), d.x = -243, d.y = -48, _.addChild(d), this.mSelImg[0] = d;
        var l = new egret.Bitmap;
        l.texture = Main.Instance.GetImg("_ui_cjjs_bm_xuanzhongxiaoguo"), l.x = -105, l.y = -48, _.addChild(l), this.mSelImg[1] = l;
        var c = new egret.Bitmap;
        c.texture = Main.Instance.GetImg("_ui_cjjs_bm_xuanzhongxiaoguo"), c.x = 35, c.y = -48, _.addChild(c), this.mSelImg[2] = c
    }, e.prototype.onAddToStage = function (t) {
        var i = this;
        this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this);
        var r = new egret.Bitmap;
        r.x = -360, r.texture = Main.Instance.GetSingleImg("_ui_cjjs_bm_ditu"), this.addChild(r), this.m_CreateThm1(), this.AddSelGroup(), this.m_TextField = new egret.TextField, this.m_TextField.touchEnabled = !0, this.m_TextField.name = "", this.m_TextField.size = 24, this.m_TextField.textColor = ServerUI.COLOR, this.m_TextField.textAlign = egret.HorizontalAlign.CENTER, this.m_TextField.verticalAlign = egret.VerticalAlign.MIDDLE, this.m_TextField.x = -96, this.m_TextField.y = 1032, this.m_TextField.width = 195, this.m_TextField.height = 52, this.m_TextField.type = egret.TextFieldType.INPUT, this.addChild(this.m_TextField), this.m_TextField.addEventListener(egret.TouchEvent.FOCUS_IN, this._DoFocus, this);
        var n = this.m_Random = new egret.Bitmap;
        n.touchEnabled = !0, this.m_Random.addEventListener(egret.TouchEvent.TOUCH_TAP, this.DoRandom, this), n.texture = Main.Instance.GetImg("_ui_bm_touzi"), n.y = 1025, n.x = 78, this.addChild(n), e.SetDownState(n);
        var a = this.m_GoBtn = new egret.Bitmap;
        a.touchEnabled = !0, this.m_GoBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this._DoGo, this), a.texture = Main.Instance.GetImg("_ui_bt_kaishiyouxi"), a.y = 1105, a.x = -176, this.addChild(a), e.SetDownState(a);
        var o = new egret.Bitmap;
        o.touchEnabled = !0, o.texture = Main.Instance.GetImg("_ui_bt_jiantou"), o.x = -341, o.y = 618, o.addEventListener(egret.TouchEvent.TOUCH_TAP, function () {
            i.UpdateIndex(i.m_Index - 1)
        }, this), this.addChild(o), e.SetDownState(o);
        var s = new egret.Bitmap;
        s.touchEnabled = !0, s.texture = Main.Instance.GetImg("_ui_bt_jiantou"), s.x = 341, s.y = 618, s.scaleX = -1, s.addEventListener(egret.TouchEvent.TOUCH_TAP, function () {
            i.UpdateIndex(i.m_Index + 1)
        }, this), this.addChild(s), e.SetDownState(s), this.Select(1), this.m_LastTime = egret.getTimer(), egret.startTick(this.Update, this);
        for (var h = ["_ui_xzjs_h1", "_ui_xzjs_h2", "_ui_xzjs_h3", , "_ui_xzjs_h4"], _ = [], d = 0, l = h; d < l.length; d++) {
            var c = l[d];
            _.push(Main.Instance.GetImg(c))
        }
        WeatherFactory.getFlower().playWeather(_), this.SendPoint(1)
    }, e.prototype._DoFocus = function () {
        this.m_IsRandom = !1
    }, e.prototype.UpdateIndex = function (t) {
        0 > t && (t = 5), t > 5 && (t = 0), this.m_Sex = t % 2, this.m_Job = Math.floor(t / 2) + 1, this.UpdateSel()
    }, e.prototype.DoRandom = function () {
        this.m_IsRandom = !1, this._DoRandom()
    }, e.prototype._DoRandom = function () {
        HttpHelper.GetRandomName(this.m_ServerData.id, this.m_Sex, this._DoRandomName, this)
    }, e.prototype._DoGo = function () {
        var t = this;
        this.time = 0;
        var e = this.m_TextField.text;
        return null == e || "" == e ? void alert("The name cannot be empty") : (this.SendPoint(2), this.m_CheckName = e, this.m_CheckIndex = this.m_Index, void Main.Instance.ConnectServer(this.m_ServerData, function () {
            t.SendPoint(3), HttpHelper.CheckName(t.m_ServerData.id, e, t._Go, t)
        }))
    }, e.prototype.SendPoint = function (t) {
        GameServerData.HasRecentSvr() || HttpHelper.SendPoint(t)
    }, e.prototype._Go = function (t) {
        var e = JSON.parse(t.currentTarget.response);
        if (200 == e.status)
            if (0 == e.data.result) {
                var i = Main.Instance.mCreateRoleData = {};
                i.crn = this.m_CheckName;
                var r = this.m_CheckIndex;
                i.crji = r, Main.Instance.ShowLoadingUI()
            } else {
                ["", "     ", "      ", "      ", "      ", "      ", "        ", "     ", "        ", "      "][e.data.result] || "    "
            }
    }, e.prototype._DoRandomName = function (t) {
        var t = JSON.parse(t.currentTarget.response);
        200 == t.status && 1 == t.result && (this.m_TextField.text = t.data)
    }, e.prototype.Select = function (t) {
        this.m_Job = t + 1, this.UpdateSel()
    }, e.prototype.UpdateSel = function () {
        var t = this.m_Index;
        this.m_Index = 2 * (this.m_Job - 1) + this.m_Sex;
        for (var e = this.m_Job - 1, i = 0; i < this.mSelImg.length; i++) this.mSelImg[i].visible = i == e;
        this.sel1.visible = 0 == this.m_Sex, this.sel2.visible = 1 == this.m_Sex;
        var r = (this["roleImg" + this.m_CurImgIndex], this["roleGroup" + this.m_CurImgIndex]);
        if (t != this.m_Index) {
            var n = this.m_Index > t ? -1 : 1,
                a = 600;
            this.AddTween(r, {
                x: n * a,
                alpha: 0
            }, 350), this.m_CurImgIndex = (this.m_CurImgIndex + 1) % 2;
            var o = this["roleGroup" + this.m_CurImgIndex];
            this._LoadTexture(this.m_Index), o.x = -1 * n * a, o.alpha = 0, this.AddTween(o, {
                x: 0,
                alpha: 1
            }, 350), this.m_IsRandom && this._DoRandom()
        }
    }, e.prototype._LoadTexture = function (t) {
        RES.getResByUrl(this.m_Textures[t].path, this._Loaded, this, RES.ResourceItem.TYPE_IMAGE)
    }, e.prototype._Loaded = function (t, e) {
        if (t)
            for (var i = 0; i < this.m_Textures.length; ++i)
                if (this.m_Textures[i].path == e) {
                    var r = this["roleImg" + this.m_CurImgIndex];
                    r.texture = t, r.x = -(t.textureWidth >> 1), r.y = -t.textureHeight;
                    break
                }
    }, e.prototype.Close = function () {
        if (egret.stopTick(this.Update, this), this.parent) {
            this.parent.removeChild(this);
            for (var t = 0, e = this.m_Textures; t < e.length; t++) {
                var i = e[t];
                RES.destroyRes(i.path)
            }
        }
        WeatherFactory.getFlower().stopWeather()
    }, e.prototype.AddTween = function (t, e, i) {
        for (var r = this.m_TweenList.length - 1; r >= 0; r--) {
            var n = this.m_TweenList[r];
            n.target == t && this.m_TweenList.splice(r, 1)
        }
        var a = {};
        for (var o in e) a[o] = {
            prop: e[o],
            startProp: t[o]
        };
        this.m_TweenList.push({
            time: 0,
            duration: i,
            target: t,
            prop: a
        })
    }, e.prototype.Update = function (t) {
        if (this.parent && this.$stage) {
            var i = t - this.m_LastTime;
            if (this.m_LastTime = t, this.time > 0 && (this.time -= i) <= 0) return void this._DoGo();
            this.timeLabel.text = Math.floor(Math.max(.001 * this.time, 0)) + "s        ";
            for (var r = this.m_TweenList.length - 1; r >= 0; r--) {
                var n = this.m_TweenList[r];
                n.time += i;
                var a = e.circOut(n.time / n.duration);
                n.time >= n.duration && (a = 1, this.m_TweenList.splice(r, 1));
                for (var o in n.prop) {
                    var s = n.prop[o],
                        h = s.startProp + (s.prop - s.startProp) * a;
                    n.target[o] = h
                }
            }
            return !1
        }
    }, e.circOut = function (t) {
        return Math.sqrt(1 - --t * t)
    }, e.SetDownState = function (t) {
        var e = t.y,
            i = t.x;
        t.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function () {
            this.y = e + 4, this.x = i + 4
        }, t), t.addEventListener(egret.TouchEvent.TOUCH_CANCEL, function () {
            this.y = e, this.x = i
        }, t), t.addEventListener(egret.TouchEvent.TOUCH_END, function () {
            this.y = e, this.x = i
        }, t), t.addEventListener(egret.TouchEvent.TOUCH_MOVE, function () {
            this.y = e, this.x = i
        }, t)
    }, e
}(egret.DisplayObjectContainer);
__reflect(CreateRoleUI.prototype, "CreateRoleUI");
var ServerUI = function (t) {
    function e() {
        var e = t.call(this) || this;
        return e.addEventListener(egret.Event.ADDED_TO_STAGE, e.onAddToStage, e), e
    }
    return __extends(e, t), e.prototype.onAddToStage = function (t) {
        this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this), this.onResize(), GameServerData.Callback = this.DoServerData, GameServerData.ThisObject = this
    }, e.prototype.DoServerData = function (t) {
        var e = GameServerData.PageData[this.m_LeftScrollView.GetSelectIndex()];
        e.index == t && this.m_RightScrollView.SetDatas(e.datas)
    }, e.prototype.Close = function () {
        this.parent && this.parent.removeChild(this), GameServerData.Callback = null, GameServerData.ThisObject = null
    }, e.prototype._LeftClick = function (t) {
        0 != t && GameServerData.GetPageData(GameServerData.PageData[t].index), this.m_RightScrollView.SetDatas(GameServerData.PageData[t].datas)
    }, e.prototype._RightClick = function (t) {
        for (var e = this.m_RightScrollView.GetData(t), i = GameServerData.PageData[0].datas, r = 0, n = i.length; n > r; ++r)
            if (i[r].id == e.id) return void Main.Instance.StartLoadGame(e);
        Main.Instance.ShowCreateUI(e)
    }, e.IsNewServer = function (t) {
        for (var e = GameServerData.PageData[0].datas, i = 0, r = e.length; r > i; ++i)
            if (e[i].id == t) return !1;
        return !0
    }, e.prototype._OnClickClose = function () {
        this.Close()
    }, e.prototype.onResize = function () {
        this.bg && (this.bg.x = -4 - (egret.MainContext.instance.stage.stageWidth >> 1), this.bg.y = -Main.Instance.mUIGroupYPos, this.bg.width = 1.2 * egret.MainContext.instance.stage.stageWidth, this.bg.height = 1.2 * egret.MainContext.instance.stage.stageHeight)
    }, e.COLOR = 7024650, e
}(egret.DisplayObjectContainer);
__reflect(ServerUI.prototype, "ServerUI");
var ServerScrollView = function () {
    function t(t, e, i, r) {
        this.m_CacheList = [], this.m_Datas = [], this.m_Index = -1, this.m_ScrollView = t, this.m_Click = i, this.m_ThisObject = r, this.m_ScrollView.addEventListener(egret.Event.CHANGE, this.OnChange, this), this.m_ItemCls = e, this.m_Group = new ServerGroup, this.m_Group.width = t.width, this.m_Group.height = t.height, t.setContent(this.m_Group)
    }
    return t.prototype.GetItme = function () {
        var t = this.m_CacheList.pop() || new this.m_ItemCls;
        return t
    }, t.prototype.OnChange = function () {
        for (var t = this.m_ScrollView.scrollTop, e = t + this.m_ScrollView.height, i = this.m_ItemCls.Height, r = 0; r < this.m_Group.numChildren;) {
            var n = this.m_Group.getChildAt(r);
            if (!(n.y < t - i || n.itemIndex >= this.m_Datas.length)) break;
            this.m_Group.removeChildAt(r), this.m_CacheList.push(n)
        }
        for (var r = this.m_Group.numChildren - 1; r >= 0; --r) {
            var n = this.m_Group.getChildAt(r);
            if (!(n.y > e || n.itemIndex >= this.m_Datas.length)) break;
            this.m_Group.removeChildAt(r), this.m_CacheList.push(n)
        }
        for (;;) {
            var a = this.m_Group.$children[0];
            if (null == a) {
                if (!this._AddItem(0, -1)) break
            } else {
                if (!(a.y >= t)) break;
                if (!this._AddItem(a.itemIndex - 1, -1)) break
            }
        }
        for (;;) {
            var o = this.m_Group.$children[this.m_Group.numChildren - 1];
            if (null == o) break;
            if (!(o.y <= t + this.m_ScrollView.height - i)) break;
            if (!this._AddItem(o.itemIndex + 1, 1)) break
        }
    }, t.prototype._ItemClick = function (t) {
        var e = t.target;
        this.SelectIndex(e.itemIndex)
    }, t.prototype.GetSelectIndex = function () {
        return this.m_Index
    }, t.prototype.SelectIndex = function (t) {
        this.m_Index = t;
        for (var e = 0; e < this.m_Group.numChildren; ++e) {
            var i = this.m_Group.getChildAt(e);
            i.light && (i.light.visible = t == i.itemIndex)
        }
        this.m_Click && this.m_ThisObject && this.m_Click.call(this.m_ThisObject, t)
    }, t.prototype._AddItem = function (t, e) {
        if (null == this.m_Datas[t]) return !1;
        var i = this.GetItme();
        return i.addEventListener(egret.TouchEvent.TOUCH_TAP, this._ItemClick, this), i.itemIndex = t, i.y = this.m_ItemCls.Height * t, i.SetData(this.m_Datas[t]), -1 == e ? this.m_Group.addChildAt(i, 0) : this.m_Group.addChild(i), !0
    }, t.prototype.GetData = function (t) {
        return this.m_Datas[t]
    }, t.prototype.SetDatas = function (t) {
        this.m_Datas = t, this.m_Group.height = t.length * this.m_ItemCls.Height, 0 == this.m_ScrollView.scrollTop ? this.OnChange() : this.m_ScrollView.scrollTop = 0;
        for (var e = 0; e < this.m_Group.numChildren; ++e) this.m_Group.getChildAt(e).SetData(t[e])
    }, t
}();
__reflect(ServerScrollView.prototype, "ServerScrollView");
var ServerGroup = function (t) {
    function e() {
        var e = t.call(this) || this;
        return e.touchEnabled = !0, e
    }
    return __extends(e, t), e.prototype.$hitTest = function (e, i) {
        var r = t.prototype.$hitTest.call(this, e, i);
        if (r) return r;
        if (!this.$visible || !this.touchEnabled) return null;
        var n = this.globalToLocal(e, i, egret.$TempPoint),
            a = egret.$TempRectangle.setTo(0, 0, this.width, this.height),
            o = this.$scrollRect;
        return o && (a.x = o.x, a.y = o.y), a.contains(n.x, n.y) ? this : null
    }, e
}(egret.DisplayObjectContainer);
__reflect(ServerGroup.prototype, "ServerGroup");
var ServerUIItem1 = function (t) {
    function e() {
        var i = t.call(this) || this;
        return i.touchEnabled = !0, i.touchChildren = !1, i.width = e.Width, i.height = e.Height, i
    }
    return __extends(e, t), e.prototype.SetData = function (t) {
        this.label.text = t.name
    }, e.Width = 215, e.Height = 80, e
}(egret.DisplayObjectContainer);
__reflect(ServerUIItem1.prototype, "ServerUIItem1");
var ServerUIItem2 = function (t) {
    function e() {
        var i = t.call(this) || this;
        i.touchEnabled = !0, i.touchChildren = !1, i.width = e.Width, i.height = e.Height;
        var r = new egret.Bitmap;
        return r.touchEnabled = !1, r.texture = Main.Instance.GetImg(""), r.width = e.Width - 20, r.height = e.Height - 10, r.scale9Grid = new egret.Rectangle(60, 54, 3, 3), r.x = i.width - r.width >> 1, r.y = i.height - r.height >> 1, i.addChild(r), i.label = new egret.TextField, i.label.touchEnabled = !1, i.label.size = 30, i.label.textColor = ServerUI.COLOR, i.label.height = r.height, i.label.x = 80, i.label.y = r.y, i.label.verticalAlign = egret.VerticalAlign.MIDDLE, i.addChild(i.label), i.flagImg = new egret.Bitmap, i.flagImg.touchEnabled = !1, i.addChild(i.flagImg), i.hotImg = new egret.Bitmap, i.hotImg.touchEnabled = !1, i.hotImg.x = 30, i.hotImg.y = 50, i.addChild(i.hotImg), i.headImg = new egret.Bitmap, i.headImg.touchEnabled = !1, i.headImg.width = 81, i.headImg.height = 81, i.headImg.x = 305, i.headImg.y = 15, i.headImg.texture = Main.Instance.GetImg(""), i.headImg.visible = !1, i.addChild(i.headImg), i.playername = new egret.TextField, i.playername.touchEnabled = !1, i.playername.size = 18, i.playername.textColor = ServerUI.COLOR, i.playername.height = r.height, i.playername.x = 300, i.playername.y = r.y + 100, i.playername.width = 92, i.playername.textAlign = egret.HorizontalAlign.CENTER, i.addChild(i.playername), i.kuangImg = new egret.Bitmap, i.kuangImg.texture = Main.Instance.GetImg(""), i.kuangImg.width = 92, i.kuangImg.height = 92, i.kuangImg.x = 300, i.kuangImg.y = 10, i.kuangImg.visible = !1, i.addChild(i.kuangImg), i
    }
    return __extends(e, t), e.prototype.SetData = function (t) {
        this.Desc = t, this.label.text = t.name;
        t.GetStatus();
        this.flagImg.x = 11, this.flagImg.y = 6, this.flagImg.visible = !0, this.SetHeadData()
    }, e.prototype.SetHeadData = function () {
        for (var t = this.Desc.ip, e = Main.Instance.playerServerData.data.recent, i = !1, r = 0; r < e.length; r++) {
            var n = e[r];
            if (t == n.addr) {
                var a = n.job || 1,
                    o = n.sex || 0;
                this.headImg.texture = Main.Instance.GetImg("head" + a + o), this.playername.text = n.name, this.kuangImg.visible = !0, this.headImg.visible = !0, i = !0;
                break
            }
        }
        i || (this.kuangImg.visible = !1, this.headImg.visible = !1, this.playername.text = "")
    }, e.Width = 423, e.Height = 131, e
}(egret.DisplayObjectContainer);
__reflect(ServerUIItem2.prototype, "ServerUIItem2");
var Socket = function () {
    function t() {
        this._socketStatus = 0, this.recvPack = new egret.ByteArray, this.m_PreHeartBeat = 0, this.m_ServerTimeCounter = 5, this.m_HeartBeat = new egret.ByteArray(new Uint8Array([17, 1, 4, 1, 199])), this.newSocket()
    }
    return Object.defineProperty(t.prototype, "connected", {
        get: function () {
            return this.socket_ ? this.socket_.connected : !1
        },
        enumerable: !0,
        configurable: !0
    }), t.prototype.newSocket = function () {
        this.socket_ && (this.socket_.removeEventListener(egret.Event.CONNECT, this.onSocketConnected, this), this.socket_.removeEventListener(egret.Event.CLOSE, this.onSocketClose, this), this.socket_.removeEventListener(egret.ProgressEvent.SOCKET_DATA, this.onSocketRead, this), this.socket_.removeEventListener(egret.IOErrorEvent.IO_ERROR, this.connectError, this)), this.socket_ = new egret.WebSocket, this.socket_.type = egret.WebSocket.TYPE_BINARY, this.socket_.addEventListener(egret.Event.CONNECT, this.onSocketConnected, this), this.socket_.addEventListener(egret.Event.CLOSE, this.onSocketClose, this), this.socket_.addEventListener(egret.ProgressEvent.SOCKET_DATA, this.onSocketRead, this), this.socket_.addEventListener(egret.IOErrorEvent.IO_ERROR, this.connectError, this)
    }, t.prototype.connectError = function () {
        alert("Network interruption"), window.connectError && window.connectError()
    }, t.prototype.connect = function (e, i) {
        this.updateStatus(t.STATUS_CONNECTING), this._host = e, this._port = i, this.Connect(e, i)
    }, t.prototype.Connect = function (e, i) {
        var r = this;
        this.newSocket();
        var n = "";
        if (WindowData.IsHttps()) {
            var a = WindowData._GetPlatformId();
            a > 1e4 && (a %= 10);
            var o = WindowData._GetCenterAddr();
            n = "wss://" + o
        } else n = "ws://" + e + ":" + i;
        console.log("connect--" + n), console.log("connect to " + e + " ,port: " + i + " !"), this.socket_.connectByUrl(n), window.setTimeout(function () {
            r._socketStatus == t.STATUS_CONNECTING && (alert("time out"), r.close())
        }, 1e4)
    }, t.prototype.close = function () {
        console.log("close socket！ip:" + this._host + " port:" + this._port), this.socket_ && this.socket_.close(), this.updateStatus(t.STATUS_DISCONNECT), egret.stopTick(this._SendHeartBeat, this)
    }, t.prototype.GetSocketState = function () {
        return this._socketStatus
    }, t.prototype.onSocketConnected = function (e) {
        console.log("connect success！ip:" + this._host + " port:" + this._port), this.updateStatus(t.STATUS_CHECKING), egret.stopTick(this._SendHeartBeat, this), egret.startTick(this._SendHeartBeat, this), this.proxy && this.proxy.onSocketConnected()
    }, t.prototype.onSocketRead = function (t) {
        if (this.proxy) {
            var e = this.recvPack,
                i = this.socket_;
            i._readByte.position = 0;
            var r = i._readByte.bytesAvailable;
            i.readBytes(e, 0), this.proxy.onSocketRead(new Uint8Array(e.buffer.slice(0, r)))
        }
    }, t.prototype.onSocketClose = function (e) {
        console.log("         ！ip:" + this._host + " port:" + this._port);
        var i = this._socketStatus;
        this.updateStatus(t.STATUS_DISCONNECT), this.proxy && this.proxy.onSocketClose(i)
    }, t.prototype.updateStatus = function (t) {
        if (this._socketStatus != t) {
            var e = this._socketStatus;
            this._socketStatus = t, this.onFinishCheck(t, e)
        }
    }, t.prototype.onFinishCheck = function (e, i) {
        e == t.STATUS_COMMUNICATION ? console.log("          ！ip:" + this._host + " port:" + this._port) : e == t.STATUS_CHECKING || e == t.STATUS_DISCONNECT, this.UpdateStateEvent && this.UpdateStateEvent(e), this.proxy && this.proxy.onFinishCheck(e, i)
    }, t.prototype._SendHeartBeat = function (t) {
        return t > this.m_PreHeartBeat + 2e4 && (this.m_PreHeartBeat = t, this.sendPack(this.m_HeartBeat)), !1
    }, t.prototype.sendPack = function (t) {
        if (null == t || 0 == t.length) throw new egret.error("      ！");
        this.socket_ && this.socket_.connected ? this.socket_.writeBytes(t) : console.error("not connect")
    }, t.STATUS_CONNECTING = 1, t.STATUS_CHECKING = 2, t.STATUS_COMMUNICATION = 3, t.STATUS_DISCONNECT = 4, t.ins = function () {
        return t._ins || (t._ins = new t), t._ins
    }, t
}();
__reflect(Socket.prototype, "Socket");
var WindowData = function () {
    function t() {}
    return t.ShowFps = function () {
        if (!this.m_IsShow) {
            this.m_IsShow = !0;
            try {
                document.querySelectorAll(".egret-player")[0]["egret-player"].player.displayFPS(!0, !1, null, {
                    x: 0,
                    y: 0,
                    size: 12,
                    textColor: "0xffffff",
                    bgAlpha: .2
                })
            } catch (t) {}
        }
    }, t._LoginToken = function (t) {
        window._LoginToken(t)
    }, t._GetServerAddr = function () {
        return t.IsHttps() ? "https://" + t._GetCenterAddr() + ":" + t.HttpsPort() : "http://" + t._GetCenterAddr() + ":" + t.HttpPort()
    }, t._GetBGImg = function () {
        return window.__CONFIG__.__LOING_BG__ || ""
    }, t._GetStartType = function () {
        return window.__CONFIG__.__START_TYPE__ || 0
    }, t._GetCenterAddr = function () {
        return window.__CONFIG__.__SER_URL__
    }, t._GetResAddr = function () {
        return window.__CONFIG__.__RES_URL__
    }, t._GetStartResAddr = function () {
        return window.__CONFIG__.__START_RES__
    }, t._GetPlatformId = function () {
        return window.__CONFIG__.__PLATFORM_ID__
    }, t._MainCls = function () {
        return window.__CONFIG__.__MAIN_CLS__ || "StartMain"
    }, t._DirectLogin = function () {
        return window.__CONFIG__.__DIRECT_LOGIN__
    }, t._GetServerName = function (t) {
        var e = window.__CONFIG__.__ServerNameFunc__;
        if (e) {
            var i = e(t);
            if (i) return i
        }
        return "  " + t + " "
    }, t.HasClientConfig = function (t) {
        return this.Has(window.__CONFIG__.__CLIENT_CONFIG__ || 0, t)
    }, t.StartLoading = function () {
        var t = window.__StartLoading;
        t && t()
    }, t.RemoveBg = function () {
        var t = window.__RemoveBg;
        t && t()
    }, t.IsHttps = function () {
        return "https:" == location.href.substr(0, 6) ? !0 : !1
    }, t.HttpsPort = function () {
        var t = window.__CONFIG__.__HTTPS_PORT__;
        return t ? t : "8601"
    }, t.HttpPort = function () {
        var t = window.__CONFIG__.__HTTP_PORT__;
        return t ? t : "8501"
    }, t.IsFullScreen = function () {
        if (this._IsFullScreen) return this._IsFullScreen;
        var t = this.HasClientConfig(1);
        return 0 == t ? this._IsFullScreen = !egret.Capabilities.isMobile : this._IsFullScreen = !1, this._IsFullScreen
    }, t.Has = function (t, e) {
        return (t & 1 << e) > 0
    }, t.GetThmType = function () {
        return parseInt(window.__CONFIG__.__THM__ || 0)
    }, t.GetDefaultSel = function () {
        return parseInt(window.__CONFIG__.__DEFAULT_JOB__ || 0)
    }, t.m_IsShow = !1, t
}();
__reflect(WindowData.prototype, "WindowData");
var RainLine = function (t) {
    function e() {
        var e = null !== t && t.apply(this, arguments) || this;
        return e.autoRotation = !0, e.sptx = 0, e.speedx = 0, e.speedy = 0, e.targety = 0, e.sy = 0, e.down = !0, e.spt = 0, e.touchEnabled = !1, e.sScale = 0, e.rotationPlus = 0, e
    }
    return __extends(e, t), e.prototype.update = function () {
        this.spt += this.sptx;
        var t = this.x + this.speedx + 2 * Math.cos(this.spt),
            e = this.y + this.speedy;
        if (0 == this.type) {
            if (this.autoRotation) {
                var i = -(180 * Math.atan2(t - this.x, e - this.y)) / Math.PI + 90;
                this.rotation = i
            }
            if (this.x = t, this.y = e, this.down) {
                if (this.y >= this.targety) return void(this.isDeath = !0)
            } else if (this.y <= this.targety) return void(this.isDeath = !0)
        } else if (this.scaleX += .2, this.scaleY += .2, this.scaleX >= 1) return void(this.isDeath = !0);
        this.isDeath = this.x <= 0 || this.y <= 0 || this.x >= this.stage.stageWidth || this.y >= this.stage.stageHeight
    }, e
}(egret.Bitmap);
__reflect(RainLine.prototype, "RainLine");
var Base64 = function () {
    function t() {}
    return t.encode = function (t) {
        var e, i, r, n, a, o, s, h = "",
            _ = 0;
        for (t = this._utf8_encode(t); _ < t.length;) e = t.charCodeAt(_++), i = t.charCodeAt(_++), r = t.charCodeAt(_++), n = e >> 2, a = (3 & e) << 4 | i >> 4, o = (15 & i) << 2 | r >> 6, s = 63 & r, isNaN(i) ? o = s = 64 : isNaN(r) && (s = 64), h = h + this._keyStr.charAt(n) + this._keyStr.charAt(a) + this._keyStr.charAt(o) + this._keyStr.charAt(s);
        return h
    }, t.decode = function (t) {
        var e, i, r, n, a, o, s, h = "",
            _ = 0;
        for (t = t.replace(/[^A-Za-z0-9\+\/\=]/g, ""); _ < t.length;) n = this._keyStr.indexOf(t.charAt(_++)), a = this._keyStr.indexOf(t.charAt(_++)), o = this._keyStr.indexOf(t.charAt(_++)), s = this._keyStr.indexOf(t.charAt(_++)), e = n << 2 | a >> 4, i = (15 & a) << 4 | o >> 2, r = (3 & o) << 6 | s, h += String.fromCharCode(e), 64 != o && (h += String.fromCharCode(i)), 64 != s && (h += String.fromCharCode(r));
        return h = this._utf8_decode(h)
    }, t._utf8_encode = function (t) {
        t = t.replace(/\r\n/g, "\n");
        for (var e = "", i = 0; i < t.length; i++) {
            var r = t.charCodeAt(i);
            128 > r ? e += String.fromCharCode(r) : r > 127 && 2048 > r ? (e += String.fromCharCode(r >> 6 | 192), e += String.fromCharCode(63 & r | 128)) : (e += String.fromCharCode(r >> 12 | 224), e += String.fromCharCode(r >> 6 & 63 | 128), e += String.fromCharCode(63 & r | 128))
        }
        return e
    }, t._utf8_decode = function (t) {
        for (var e, i, r = "", n = 0, a = 0; n < t.length;) e = t.charCodeAt(n), 128 > e ? (r += String.fromCharCode(e), n++) : e > 191 && 224 > e ? (i = t.charCodeAt(n + 1), r += String.fromCharCode((31 & e) << 6 | 63 & i), n += 2) : (i = t.charCodeAt(n + 1), a = t.charCodeAt(n + 2), r += String.fromCharCode((15 & e) << 12 | (63 & i) << 6 | 63 & a), n += 3);
        return r
    }, t._keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", t
}();
__reflect(Base64.prototype, "Base64");
var WeatherFactory = function () {
    function t() {}
    return t.getFlower = function () {
        var t = egret.MainContext.instance.stage;
        return this._weatherFlower = this._weatherFlower || new WeatherFlower, this._weatherFlower.setStageTarget(t), this._weatherFlower
    }, t.enabled = !1, t.weatherFBList = [], t.weatherSceneList = [], t.weatherRunlist = {}, t
}();
__reflect(WeatherFactory.prototype, "WeatherFactory");
var WeatherFlower = function (t) {
    function e() {
        var e = t.call(this, 1) || this;
        return e.MAX_COUNT = 10, e.r_P_List = [], e.r_R_List = [], e.r_Max = 7, e.r_L_Delay = 500, e.r_L_Last_Time = 0, e.r_R_Delay = 20, e.r_R_Last_Time = 0, e.s_C_Delay = 300, e.s_C_Last_Time = 0, e.timerFrame = 30, e
    }
    return __extends(e, t), e.prototype.setStageTarget = function (t) {
        this.stageTarget = t
    }, e.prototype.onWeatherStart = function () {
        if (this.r_Max = 8, this._lastTime = egret.getTimer(), 0 == this.r_P_List.length && 0 == this.r_R_List.length)
            for (var t, e = 0; e < this.MAX_COUNT; e++) t = new RainLine, t.autoRotation = !1, this.r_P_List.push(t)
    }, e.prototype.onWeatherUpdate = function () {
        var t;
        if (null != this.imageList && 0 != this.imageList.length) {
            var e = egret.getTimer();
            if (this.r_Max != this.MAX_COUNT && e - this._lastTime >= 1e3 && (this.r_Max += 1, this.r_Max > this.MAX_COUNT && (this.r_Max = this.MAX_COUNT), this._lastTime = e), this.r_R_List.length < this.r_Max && this.r_P_List.length > 0 && e - this.r_L_Last_Time > this.r_L_Delay) {
                this.r_L_Last_Time = e, t = this.r_P_List.shift(), t.visible = !0, t.type = 0, t.texture = this.imageList[10 * Math.random() % 3 << 0];
                var i = egret.MainContext.instance.stage;
                t.x = i.stageWidth * Math.random() + 1, t.y = 20 * Math.random() + 5, t.sy = t.y, t.targety = i.stageHeight / 2 + i.stageHeight / 2 * Math.random(), t.scaleX = 0, t.scaleY = 0, t.sScale = .5 * Math.random() + .5, t.alpha = 0, t.rotationPlus = 1.5 * (2 * Math.random() - 1), t.sptx = Math.random() / 20 + .01, t.speedx = Math.random() - Math.random() - 2, t.speedy = 3 * Math.random() + 3, null == t.parent && this.stageTarget.addChild(t), this.r_R_List.push(t)
            }
            for (var r = 0; r < this.r_R_List.length; r++)
                if (t = this.r_R_List[r], t.update(), t.rotation += t.rotationPlus, t.isDeath) this.r_R_List.splice(r--, 1), this.r_P_List.push(t), t.visible = !1;
                else {
                    var n = (t.y - t.sy) / (t.targety - t.sy);
                    .2 >= n ? (t.alpha = n / .2, t.scaleX = t.scaleY = t.sScale * t.alpha) : n >= .8 && (t.alpha = (1 - n) / .2, t.scaleX = t.scaleY = t.sScale * t.alpha)
                }
        }
    }, e.prototype.onWeatherStop = function () {
        var t, e;
        for (t = 0; t < this.r_R_List.length; t++) e = this.r_R_List[t], e.visible = !0, this.Remove(e);
        for (t = 0; t < this.r_P_List.length; t++) e = this.r_P_List[t], e.visible = !0, this.Remove(e);
        this.r_R_List.length = 0, this.r_P_List.length = 0
    }, e.prototype.Remove = function (t) {
        t && t.parent && t.parent.removeChild(t)
    }, e
}(WeatherBase);
__reflect(WeatherFlower.prototype, "WeatherFlower");